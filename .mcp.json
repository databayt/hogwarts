{
  "mcpServers": {
    "vercel": {
      "type": "http",
      "url": "https://mcp.vercel.com/",
      "description": "Manage deployments, analyze logs, monitor performance"
    },
    "sentry": {
      "type": "http",
      "url": "https://mcp.sentry.dev/mcp",
      "description": "Monitor errors, debug production issues"
    },
    "figma": {
      "type": "http",
      "url": "http://127.0.0.1:3845/mcp",
      "description": "Access designs, export assets (requires Figma Desktop)"
    },
    "linear": {
      "type": "sse",
      "url": "https://mcp.linear.app/sse",
      "description": "Issue tracking and project management"
    },
    "github": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_PERSONAL_ACCESS_TOKEN}"
      },
      "description": "GitHub repositories, issues, and pull requests"
    },
    "browser": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@executeautomation/playwright-mcp-server"],
      "description": "Browser automation and web scraping"
    },
    "stripe": {
      "type": "http",
      "url": "https://mcp.stripe.com",
      "description": "Payment processing, subscription management"
    },
    "postgres-dev": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@bytebase/dbhub"],
      "env": {
        "DATABASE_URL": "${DATABASE_URL}"
      },
      "description": "Development database queries and management"
    },
    "ref": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "ref-tools-mcp@latest"],
      "env": {
        "REF_API_KEY": "${REF_API_KEY}"
      },
      "description": "Search documentation, prevent hallucinations with curated technical docs"
    },
    "posthog": {
      "type": "http",
      "url": "https://mcp.posthog.com",
      "env": {
        "POSTHOG_API_KEY": "${POSTHOG_API_KEY}",
        "POSTHOG_PROJECT_ID": "${POSTHOG_PROJECT_ID}"
      },
      "description": "Product analytics, feature flags, A/B testing, user insights"
    },
    "notion": {
      "type": "http",
      "url": "https://mcp.notion.so",
      "env": {
        "NOTION_API_KEY": "${NOTION_API_KEY}"
      },
      "description": "Documentation sync, knowledge base integration, collaborative docs"
    },
    "memory-bank": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@memory-bank/mcp-server@latest"],
      "description": "Persistent context across sessions, knowledge retention, learning from past interactions"
    },
    "slack": {
      "type": "http",
      "url": "https://mcp.slack.com",
      "env": {
        "SLACK_BOT_TOKEN": "${SLACK_BOT_TOKEN}",
        "SLACK_WORKSPACE_ID": "${SLACK_WORKSPACE_ID}"
      },
      "description": "Team notifications, deployment alerts, error reporting, collaboration"
    }
  }
}