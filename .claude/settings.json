{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Read",
      "Write",
      "Edit",
      "Glob",
      "Grep",
      "Task",
      "WebSearch",
      "Bash(git:*)",
      "Bash(pnpm:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(node:*)",
      "Bash(prisma:*)",
      "Bash(cat:*)",
      "Bash(ls:*)",
      "Bash(dir:*)",
      "Bash(tree:*)",
      "Bash(find:*)",
      "Bash(findstr:*)",
      "Bash(xargs:*)",
      "Bash(echo:*)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:nextjs.org)",
      "WebFetch(domain:react.dev)",
      "WebFetch(domain:ui.shadcn.com)",
      "WebFetch(domain:tailwindcss.com)",
      "WebFetch(domain:prisma.io)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:actix.rs)",
      "WebFetch(domain:typescript-eslint.io)",
      "WebFetch(domain:vitest.dev)",
      "WebFetch(domain:playwright.dev)",
      "WebFetch(domain:zod.dev)",
      "mcp__Ref__ref_search_documentation",
      "mcp__Ref__ref_read_url"
    ],
    "deny": [
      "Bash(rm:*)",
      "Bash(del:*)",
      "Bash(rmdir:*)",
      "Bash(format:*)",
      "Bash(shutdown:*)",
      "Bash(reboot:*)"
    ],
    "ask": []
  },
  "model": "claude-sonnet-4-5-20250929",
  "enableAllProjectMcpServers": true,
  "includeCoAuthoredBy": true,
  "alwaysThinkingEnabled": true,
  "env": {
    "PROJECT_NAME": "Hogwarts School Automation Platform",
    "PROJECT_TYPE": "nextjs",
    "MULTI_TENANT": "true",
    "I18N_LANGUAGES": "en,ar"
  },
  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Bash(git:commit)",
        "hooks": [
          {
            "type": "command",
            "command": "BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'unknown'); echo \"üîç Pre-Commit Quality Gates (Branch: $BRANCH)\"; echo \"\"; echo \"Running tests for changed files...\"; pnpm test --changed --silent --run 2>&1 | grep -v \"^$\" || TEST_EXIT=$?; echo \"Running ESLint...\"; pnpm lint --quiet 2>&1 | grep -v \"^$\" || LINT_EXIT=$?; echo \"Running TypeScript check...\"; pnpm tsc --noEmit 2>&1 | grep -v \"^$\" || TSC_EXIT=$?; echo \"\"; if [ \"$BRANCH\" = \"main\" ] || [ \"$BRANCH\" = \"master\" ] || [ \"$BRANCH\" = \"production\" ]; then if [ ! -z \"$TEST_EXIT\" ] || [ ! -z \"$LINT_EXIT\" ] || [ ! -z \"$TSC_EXIT\" ]; then echo \"‚ùå COMMIT BLOCKED: Quality checks failed on protected branch ($BRANCH)\"; echo \"Fix errors above before committing to $BRANCH\"; exit 1; fi; else if [ ! -z \"$TEST_EXIT\" ] || [ ! -z \"$LINT_EXIT\" ] || [ ! -z \"$TSC_EXIT\" ]; then echo \"‚ö†Ô∏è  WARNING: Quality checks failed on feature branch ($BRANCH)\"; echo \"Allowing commit, but please fix errors before merging to main\"; fi; fi; echo \"‚úÖ Pre-Commit checks passed\"; exit 0"
          }
        ]
      },
      {
        "matcher": "Bash(git:push)",
        "hooks": [
          {
            "type": "command",
            "command": "BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo 'unknown'); echo \"üîç Pre-Push Build Verification (Branch: $BRANCH)\"; echo \"\"; echo \"Running production build...\"; pnpm build 2>&1 | grep -v \"^$\" || BUILD_EXIT=$?; echo \"Checking Prettier formatting...\"; npx prettier --check \"src/**/*.{ts,tsx,js,jsx}\" --log-level error 2>&1 | grep -v \"^$\" || PRETTIER_EXIT=$?; echo \"\"; if [ \"$BRANCH\" = \"main\" ] || [ \"$BRANCH\" = \"master\" ] || [ \"$BRANCH\" = \"production\" ]; then if [ ! -z \"$BUILD_EXIT\" ] || [ ! -z \"$PRETTIER_EXIT\" ]; then echo \"‚ùå PUSH BLOCKED: Build or formatting checks failed on protected branch ($BRANCH)\"; echo \"Fix errors above before pushing to $BRANCH\"; exit 1; fi; else if [ ! -z \"$BUILD_EXIT\" ] || [ ! -z \"$PRETTIER_EXIT\" ]; then echo \"‚ö†Ô∏è  WARNING: Build or formatting checks failed on feature branch ($BRANCH)\"; echo \"Allowing push, but please fix errors before merging to main\"; fi; fi; echo \"‚úÖ Pre-Push checks passed\"; exit 0"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "Write",
        "hooks": [
          {
            "type": "command",
            "command": "npx prettier --write \"$CLAUDE_TOOL_ARGS\" --log-level silent || exit 0"
          }
        ]
      },
      {
        "matcher": "Edit",
        "hooks": [
          {
            "type": "command",
            "command": "npx prettier --write \"$CLAUDE_TOOL_ARGS\" --log-level silent || exit 0"
          }
        ]
      }
    ],
    "SessionStart": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "echo Hogwarts School Automation Platform - Multi-tenant Next.js + React + Prisma"
          }
        ]
      }
    ],
    "SessionEnd": [
      {
        "matcher": "*",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"\"; echo \"üìä Session Summary\"; echo \"Run: git log --oneline -5 to see recent commits\"; echo \"Run: git status to see current changes\"; echo \"\"; echo \"Thank you for using Hogwarts School Automation Platform!\""
          }
        ]
      }
    ]
  }
}
